// Code generated by mockery v1.0.0. DO NOT EDIT.

package sladder

import mock "github.com/stretchr/testify/mock"

// MockKVValidator is an autogenerated mock type for the KVValidator type
type MockKVValidator struct {
	mock.Mock
}

// Sync provides a mock function with given fields: _a0, _a1
func (_m *MockKVValidator) Sync(_a0 *KeyValueEntry, _a1 *KeyValue) (bool, error) {
	ret := _m.Called(_a0, _a1)

	var r0 bool
	if rf, ok := ret.Get(0).(func(*KeyValueEntry, *KeyValue) bool); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*KeyValueEntry, *KeyValue) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Txn provides a mock function with given fields: _a0
func (_m *MockKVValidator) Txn(_a0 KeyValue) (KVTransaction, error) {
	ret := _m.Called(_a0)

	var r0 KVTransaction
	if rf, ok := ret.Get(0).(func(KeyValue) KVTransaction); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(KVTransaction)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(KeyValue) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Validate provides a mock function with given fields: _a0
func (_m *MockKVValidator) Validate(_a0 KeyValue) bool {
	ret := _m.Called(_a0)

	var r0 bool
	if rf, ok := ret.Get(0).(func(KeyValue) bool); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
