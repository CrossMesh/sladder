// Code generated by mockery v1.0.0. DO NOT EDIT.

package sladder

import mock "github.com/stretchr/testify/mock"

// MockNodeNameResolver is an autogenerated mock type for the NodeNameResolver type
type MockNodeNameResolver struct {
	mock.Mock
}

// Keys provides a mock function with given fields:
func (_m *MockNodeNameResolver) Keys() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// Resolve provides a mock function with given fields: _a0
func (_m *MockNodeNameResolver) Resolve(_a0 ...*KeyValue) ([]string, error) {
	_va := make([]interface{}, len(_a0))
	for _i := range _a0 {
		_va[_i] = _a0[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 []string
	if rf, ok := ret.Get(0).(func(...*KeyValue) []string); ok {
		r0 = rf(_a0...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(...*KeyValue) error); ok {
		r1 = rf(_a0...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
